from telegram import Update
from telegram.ext import ContextTypes, ConversationHandler
from keyboards import main_keyboard, income_keyboard
from states import MAIN_MENU, CALCULATOR_DEBT, CALCULATOR_INCOME, CONTACT_INFO, CASE_DESCRIPTION, AI_CHAT

async def handle_main_menu(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    query = update.message.text
    
    if query == 'üìã –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è':
        info_text = (
            "üìã **–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –ø–æ –±–∞–Ω–∫—Ä–æ—Ç—Å—Ç–≤—É —Ñ–∏–∑–∏—á–µ—Å–∫–∏—Ö –ª–∏—Ü**\n\n"
            "–ú—ã –ø–æ–º–æ–∂–µ–º –≤–∞–º:\n"
            "‚úÖ –û—Ü–µ–Ω–∏—Ç—å –≤–∞—à—É —Å–∏—Ç—É–∞—Ü–∏—é\n"
            "‚úÖ –ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã\n"
            "‚úÖ –ü—Ä–æ–π—Ç–∏ –ø—Ä–æ—Ü–µ–¥—É—Ä—É –±–∞–Ω–∫—Ä–æ—Ç—Å—Ç–≤–∞\n"
            "‚úÖ –°–ø–∏—Å–∞—Ç—å –¥–æ–ª–≥–∏ –∑–∞–∫–æ–Ω–Ω–æ\n\n"
            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –¥–ª—è:\n"
            "‚Ä¢ üí∞ –†–∞—Å—á–µ—Ç–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –±–∞–Ω–∫—Ä–æ—Ç—Å—Ç–≤–∞\n"
            "‚Ä¢ üìû –°–≤—è–∑–∏ —Å —é—Ä–∏—Å—Ç–æ–º\n"
            "‚Ä¢ ü§ñ –ü–æ–ª—É—á–µ–Ω–∏—è –±—ã—Å—Ç—Ä—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ –æ—Ç –ò–ò"
        )
        await update.message.reply_text(info_text, parse_mode="Markdown")
        return MAIN_MENU
        
    elif query == 'üí∞ –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –¥–æ–ª–≥–∞':
        await update.message.reply_text(
            "üí∞ **–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –±–∞–Ω–∫—Ä–æ—Ç—Å—Ç–≤–∞**\n\n"
            "–î–∞–≤–∞–π—Ç–µ –æ—Ü–µ–Ω–∏–º –≤–∞—à—É —Å–∏—Ç—É–∞—Ü–∏—é.\n"
            "–í–≤–µ–¥–∏—Ç–µ –æ–±—â—É—é —Å—É–º–º—É –≤–∞—à–µ–≥–æ –¥–æ–ª–≥–∞ –≤ —Ä—É–±–ª—è—Ö:\n"
            "(–Ω–∞–ø—Ä–∏–º–µ—Ä: 500000)",
            parse_mode="Markdown"
        )
        return CALCULATOR_DEBT
        
    elif query == 'üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å —é—Ä–∏—Å—Ç–æ–º':
        await update.message.reply_text(
            "üìû **–°–≤—è–∑—å —Å —é—Ä–∏—Å—Ç–æ–º**\n\n"
            "–î–ª—è –∑–∞–ø–∏—Å–∏ –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –º–Ω–µ –Ω—É–∂–Ω—ã –≤–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã.\n"
            "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è –∏ —Ç–µ–ª–µ—Ñ–æ–Ω —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é:\n\n"
            "–ü—Ä–∏–º–µ—Ä: _–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤, +79991234567_",
            parse_mode="Markdown"
        )
        return CONTACT_INFO
        
    elif query == '‚ÑπÔ∏è –û –±–∞–Ω–∫—Ä–æ—Ç—Å—Ç–≤–µ':
        info = (
            "‚ÑπÔ∏è **–ë–∞–Ω–∫—Ä–æ—Ç—Å—Ç–≤–æ —Ñ–∏–∑–∏—á–µ—Å–∫–∏—Ö –ª–∏—Ü**\n\n"
            "**–ö–æ–≥–¥–∞ –º–æ–∂–Ω–æ –æ–±—ä—è–≤–∏—Ç—å —Å–µ–±—è –±–∞–Ω–∫—Ä–æ—Ç–æ–º:**\n"
            "‚Ä¢ –î–æ–ª–≥ –æ—Ç 50 000 —Ä—É–± (—á–µ—Ä–µ–∑ –ú–§–¶)\n"
            "‚Ä¢ –î–æ–ª–≥ –æ—Ç 250 000 —Ä—É–± (—á–µ—Ä–µ–∑ —Å—É–¥)\n"
            "‚Ä¢ –ü—Ä–æ—Å—Ä–æ—á–∫–∞ –ø–ª–∞—Ç–µ–∂–µ–π –±–æ–ª–µ–µ 3 –º–µ—Å—è—Ü–µ–≤\n\n"
            "**–ß—Ç–æ –º–æ–∂–Ω–æ —Å–ø–∏—Å–∞—Ç—å:**\n"
            "‚úÖ –ö—Ä–µ–¥–∏—Ç—ã –∏ –∑–∞–π–º—ã\n"
            "‚úÖ –î–æ–ª–≥–∏ –ø–æ –ñ–ö–•\n"
            "‚úÖ –ù–∞–ª–æ–≥–∏ (–∫—Ä–æ–º–µ —Ç–µ–∫—É—â–∏—Ö)\n"
            "‚úÖ –®—Ç—Ä–∞—Ñ—ã –∏ –ø–µ–Ω–∏\n\n"
            "**–ß—Ç–æ –ù–ï —Å–ø–∏—à–µ—Ç—Å—è:**\n"
            "‚ùå –ê–ª–∏–º–µ–Ω—Ç—ã\n"
            "‚ùå –í–æ–∑–º–µ—â–µ–Ω–∏–µ –≤—Ä–µ–¥–∞ –∂–∏–∑–Ω–∏/–∑–¥–æ—Ä–æ–≤—å—é\n"
            "‚ùå –ó–∞—Ä–ø–ª–∞—Ç–∞ —Ä–∞–±–æ—Ç–Ω–∏–∫–∞–º\n"
            "‚ùå –°—É–±—Å–∏–¥–∏–∞—Ä–Ω–∞—è –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å\n\n"
            "**–ü–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è:**\n"
            "‚ö†Ô∏è –ó–∞–ø—Ä–µ—Ç –Ω–∞ –∫—Ä–µ–¥–∏—Ç—ã 5 –ª–µ—Ç\n"
            "‚ö†Ô∏è –ó–∞–ø—Ä–µ—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–º–ø–∞–Ω–∏—è–º–∏ 3 –≥–æ–¥–∞\n"
            "‚ö†Ô∏è –û–±—è–∑–∞–Ω–Ω–æ—Å—Ç—å —É–≤–µ–¥–æ–º–ª—è—Ç—å –æ –±–∞–Ω–∫—Ä–æ—Ç—Å—Ç–≤–µ\n\n"
            "–î–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –º–µ–Ω—é."
        )
        await update.message.reply_text(info, parse_mode="Markdown")
        return MAIN_MENU
        
    elif query == 'ü§ñ –í–æ–ø—Ä–æ—Å –ò–ò-—é—Ä–∏—Å—Ç—É':
        await update.message.reply_text(
            "ü§ñ **–ò–ò-—é—Ä–∏—Å—Ç –ø–æ –±–∞–Ω–∫—Ä–æ—Ç—Å—Ç–≤—É**\n\n"
            "–ó–∞–¥–∞–π—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å, –∏ —è –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –ø–æ–º–æ—á—å.\n"
            "–£ –≤–∞—Å –µ—Å—Ç—å 10 –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ –≤ –¥–µ–Ω—å.\n\n"
            "–î–ª—è –≤—ã—Ö–æ–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /cancel",
            parse_mode="Markdown"
        )
        return AI_CHAT
        
    elif query == 'üìÖ –ó–∞–ø–∏—Å—å –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é':
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤ calendar.py
        pass
    else:
        await update.message.reply_text(
            "‚ùå –ù–µ –ø–æ–Ω–∏–º–∞—é –∫–æ–º–∞–Ω–¥—É. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é.",
            reply_markup=main_keyboard()
        )
        return MAIN_MENU

async def handle_debt_amount(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    try:
        debt = int(update.message.text.replace(' ', '').replace(',', ''))
        context.user_data['debt_amount'] = debt
        
        # –î–∞–µ–º –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—É—é –æ—Ü–µ–Ω–∫—É
        if debt < 50000:
            assessment = "‚ö†Ô∏è –°—É–º–º–∞ –¥–æ–ª–≥–∞ –º–µ–Ω–µ–µ 50 000 —Ä—É–±. –ë–∞–Ω–∫—Ä–æ—Ç—Å—Ç–≤–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ—Ü–µ–ª–µ—Å–æ–æ–±—Ä–∞–∑–Ω—ã–º."
        elif debt < 250000:
            assessment = "‚úÖ –í–æ–∑–º–æ–∂–Ω–æ –≤–Ω–µ—Å—É–¥–µ–±–Ω–æ–µ –±–∞–Ω–∫—Ä–æ—Ç—Å—Ç–≤–æ —á–µ—Ä–µ–∑ –ú–§–¶ (–±–µ—Å–ø–ª–∞—Ç–Ω–æ)."
        else:
            assessment = "‚úÖ –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Å—É–¥–µ–±–Ω–æ–µ –±–∞–Ω–∫—Ä–æ—Ç—Å—Ç–≤–æ. –ü—Ä–æ—Ü–µ–¥—É—Ä–∞ –∑–∞–π–º–µ—Ç 6-12 –º–µ—Å—è—Ü–µ–≤."
        
        await update.message.reply_text(
            f"üí∞ –°—É–º–º–∞ –¥–æ–ª–≥–∞: **{debt:,} —Ä—É–±.**\n\n"
            f"{assessment}\n\n"
            f"–¢–µ–ø–µ—Ä—å —É–∫–∞–∂–∏—Ç–µ –≤–∞—à —Å—Ä–µ–¥–Ω–µ–º–µ—Å—è—á–Ω—ã–π –¥–æ—Ö–æ–¥ –≤ —Ä—É–±–ª—è—Ö:",
            reply_markup=income_keyboard(),
            parse_mode="Markdown"
        )
        return CALCULATOR_INCOME
        
    except ValueError:
        await update.message.reply_text(
            "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—É–º–º—É (—Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã).\n"
            "–ü—Ä–∏–º–µ—Ä: 500000"
        )
        return CALCULATOR_DEBT

async def handle_income(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    income_text = update.message.text
    
    if income_text == '‚óÄÔ∏è –ù–∞–∑–∞–¥':
        await update.message.reply_text(
            "–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –≤–∞—à–µ–≥–æ –¥–æ–ª–≥–∞ –≤ —Ä—É–±–ª—è—Ö:",
            reply_markup=None
        )
        return CALCULATOR_DEBT
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –æ—Ç–≤–µ—Ç–∞
    if income_text in ['–î–∞, –º–æ–≥—É', '–ù–µ—Ç, –Ω–µ –º–æ–≥—É']:
        if income_text == '–î–∞, –º–æ–≥—É':
            context.user_data['income_amount'] = '–ï—Å—Ç—å —Å—Ç–∞–±–∏–ª—å–Ω—ã–π –¥–æ—Ö–æ–¥'
            recommendation = (
                "–ü—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ –¥–æ—Ö–æ–¥–∞ –≤–æ–∑–º–æ–∂–Ω—ã –≤–∞—Ä–∏–∞–Ω—Ç—ã:\n"
                "‚Ä¢ –†–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—è –¥–æ–ª–≥–æ–≤ (—Ä–∞—Å—Å—Ä–æ—á–∫–∞ –¥–æ 3 –ª–µ—Ç)\n"
                "‚Ä¢ –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –∏–º—É—â–µ—Å—Ç–≤–∞ (–µ—Å–ª–∏ —Ä–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—è –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞)"
            )
        else:
            context.user_data['income_amount'] = '–ù–µ—Ç –¥–æ—Ö–æ–¥–∞'
            recommendation = (
                "–ü—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –¥–æ—Ö–æ–¥–∞ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è:\n"
                "‚Ä¢ –ü—Ä–æ—Ü–µ–¥—É—Ä–∞ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –∏–º—É—â–µ—Å—Ç–≤–∞\n"
                "‚Ä¢ –ü–æ–ª–Ω–æ–µ —Å–ø–∏—Å–∞–Ω–∏–µ –¥–æ–ª–≥–æ–≤ –∑–∞ 4-6 –º–µ—Å—è—Ü–µ–≤"
            )
    else:
        try:
            income = int(income_text.replace(' ', '').replace(',', ''))
            context.user_data['income_amount'] = f"{income:,} —Ä—É–±."
            
            debt = context.user_data.get('debt_amount', 0)
            if income > 0 and debt > 0:
                months_to_pay = debt / income
                if months_to_pay > 36:
                    recommendation = "–î–æ–ª–≥ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –ø–æ–≥–∞—Å–∏—Ç—å –∑–∞ 3 –≥–æ–¥–∞. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –±–∞–Ω–∫—Ä–æ—Ç—Å—Ç–≤–æ."
                else:
                    recommendation = f"–¢–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–∏ –¥–æ–ª–≥ –º–æ–∂–Ω–æ –ø–æ–≥–∞—Å–∏—Ç—å –∑–∞ {int(months_to_pay)} –º–µ—Å—è—Ü–µ–≤. –†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ —Ä–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—é."
            else:
                recommendation = "–î–ª—è —Ç–æ—á–Ω–æ–π –æ—Ü–µ–Ω–∫–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å —é—Ä–∏—Å—Ç–æ–º."
                
        except ValueError:
            context.user_data['income_amount'] = income_text
            recommendation = "–î–ª—è —Ç–æ—á–Ω–æ–π –æ—Ü–µ–Ω–∫–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å —é—Ä–∏—Å—Ç–æ–º."
    
    # –ò—Ç–æ–≥–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑
    debt = context.user_data.get('debt_amount', 0)
    result_text = (
        f"üìä **–†–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞:**\n\n"
        f"üí∞ –î–æ–ª–≥: **{debt:,} —Ä—É–±.**\n"
        f"üíµ –î–æ—Ö–æ–¥: **{context.user_data.get('income_amount')}**\n\n"
        f"**–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:**\n{recommendation}\n\n"
        f"–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏:\n"
        f"‚Ä¢ –ù–∞–∂–º–∏—Ç–µ 'üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å —é—Ä–∏—Å—Ç–æ–º'\n"
        f"‚Ä¢ –ò–ª–∏ 'üìÖ –ó–∞–ø–∏—Å—å –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é'"
    )
    
    await update.message.reply_text(
        result_text,
        reply_markup=main_keyboard(),
        parse_mode="Markdown"
    )
    return MAIN_MENU
